<%
  iaas_list = %w(gcp-turbulence)
%>
---
resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource

- name: gcs
  type: docker-image
  source:
    repository: frodenas/gcs-resource

resources:

- name: git-kubo-ci
  type: git
  source:
    uri: https://github.com/pivotal-cf-experimental/kubo-ci
    branch: master

<% iaas_list.each do |iaas| %>
- name: kubo-lock-<%= iaas %>
  type: pool
  source:
    uri: git@github.com:pivotal-cf-experimental/kubo-locks.git
    branch: master
    private_key: ((git-ssh-key))
    pool: kubo-<%= iaas %>
<% end %>

- name: gcs-bosh-state
  type: gcs
  source:
    json_key: ((gcs-json-key))
    bucket: kubo-pipeline-store
    versioned_file: bosh/state.json


# Creds
- name: gcs-bosh-creds
  type: gcs
  source:
    json_key: ((gcs-json-key))
    bucket: kubo-pipeline-store
    versioned_file: bosh/creds.yml

# Source Artifacts - to be tested
- name: gcs-kubo-release-pre
  type: gcs
  source:
    json_key: ((gcs-json-key))
    bucket: kubo-public
    versioned_file: kubo-release-latest.tgz

- name: gcs-kubo-deployment-pre
  type: gcs
  source:
    json_key: ((gcs-json-key))
    bucket: kubo-public
    versioned_file: kubo-deployment-latest.tgz

############################################
# Jobs
############################################
jobs:

<% iaas_list.each do |iaas| %>
- name: claim-lock-<%= iaas %>
  plan:
  - aggregate:
    - get: git-kubo-ci
    - get: gcs-kubo-release-pre
      trigger: true
    - get: gcs-kubo-deployment-pre
  - put: kubo-lock-<%= iaas %>
    params: { acquire: true }

- name: install-bosh-<%= iaas %>
  plan:
  - aggregate:
    - get: git-kubo-ci
    - get: gcs-kubo-release-pre
      passed: [ 'claim-lock-<%= iaas %>' ]
    - get: gcs-kubo-deployment-pre
      passed: [ 'claim-lock-<%= iaas %>' ]
    - get: kubo-lock-<%= iaas %>
      version: every
      trigger: true
      passed: [ 'claim-lock-<%= iaas %>' ]

  - task: unpack-kubo-deployment
    file: git-kubo-ci/tasks/unpack-kubo-deployment.yml
    tags: [gcp]

  - task: install
    file: git-kubo-ci/tasks/install-bosh.yml
    tags: [gcp]
    input_mapping:
      kubo-lock: kubo-lock-<%= iaas %>
    params:
      USE_TURBULENCE: 1

  - aggregate:
    - put: gcs-bosh-creds
      params:
        file: bosh-creds/creds.yml
    - put: gcs-bosh-state
      params:
        file: bosh-state/state.json

- name: deploy-k8s-<%= iaas %>-static-network
  plan:
  - aggregate:
    - get: git-kubo-ci
    - get: kubo-lock-<%= iaas %>
      version: every
      trigger: true
      passed: [ 'install-bosh-<%= iaas %>' ]
    - get: gcs-kubo-deployment-pre
      passed: [ 'install-bosh-<%= iaas %>' ]
    - get: gcs-kubo-release-pre
      passed: [ 'install-bosh-<%= iaas %>' ]
    - get: gcs-bosh-state
      passed: [ 'install-bosh-<%= iaas %>' ]
    - get: gcs-bosh-creds
      passed: [ 'install-bosh-<%= iaas %>' ]

  - task: unpack-kubo-deployment
    file: git-kubo-ci/tasks/unpack-kubo-deployment.yml
    tags: [gcp]

  - task: configure-bosh
    tags: [gcp]
    input_mapping:
      kubo-lock: kubo-lock-<%= iaas %>
    file: git-kubo-ci/tasks/configure-bosh.yml
    tags: [gcp]

  - task: deploy
    tags: [gcp]
    input_mapping:
      kubo-lock: kubo-lock-<%= iaas %>
      gcs-kubo-release-tarball: gcs-kubo-release-pre
    file: git-kubo-ci/tasks/deploy-k8s-instance.yml
    params:
      CC_STATIC_NETWORK: true

- name: run-turbulence-tests-<%= iaas %>-static-network
  plan:
  - aggregate:
    - get: git-kubo-ci
    - get: kubo-lock-<%= iaas %>
      version: every
      trigger: true
      passed: [ 'deploy-k8s-<%= iaas %>-static-network' ]
    - get: gcs-bosh-state
      passed: [ 'deploy-k8s-<%= iaas %>-static-network' ]
    - get: gcs-bosh-creds
      passed: [ 'deploy-k8s-<%= iaas %>-static-network' ]
    - get: gcs-kubo-release-pre
      passed: [ 'deploy-k8s-<%= iaas %>-static-network' ]
    - get: gcs-kubo-deployment-pre
      passed: [ 'deploy-k8s-<%= iaas %>-static-network' ]

  - task: unpack-kubo-deployment
    file: git-kubo-ci/tasks/unpack-kubo-deployment.yml
    tags: [gcp]

  - task: turbulence-tests
    file: git-kubo-ci/tasks/run-k8s-turbulence-tests-ci.yml
    tags: [gcp]
    input_mapping: {kubo-lock: kubo-lock-<%= iaas %>}

- name: destroy-k8s-<%= iaas %>-static-network
  plan:
  - aggregate:
    - get: git-kubo-ci
    - get: kubo-lock-<%= iaas %>
      version: every
      trigger: true
      passed: [ 'run-turbulence-tests-<%= iaas %>-static-network' ]
    - get: gcs-kubo-deployment-pre
      passed: [ 'run-turbulence-tests-<%= iaas %>-static-network' ]
    - get: gcs-kubo-release-pre
      passed: [ 'run-turbulence-tests-<%= iaas %>-static-network' ]
    - get: gcs-bosh-state
      passed: [ 'run-turbulence-tests-<%= iaas %>-static-network' ]
    - get: gcs-bosh-creds
      passed: [ 'run-turbulence-tests-<%= iaas %>-static-network' ]

  - task: unpack-kubo-deployment
    file: git-kubo-ci/tasks/unpack-kubo-deployment.yml
    tags: [gcp]

  - task: destroy-k8s
    file: git-kubo-ci/tasks/destroy-k8s-instance.yml
    tags: [gcp]
    input_mapping: {kubo-lock: kubo-lock-<%= iaas %>}

- name: deploy-k8s-<%= iaas %>-dynamic-network
  plan:
  - aggregate:
    - get: git-kubo-ci
    - get: kubo-lock-<%= iaas %>
      version: every
      passed: [ 'destroy-k8s-<%= iaas %>-static-network' ]
      trigger: true
    - get: gcs-kubo-deployment-pre
      passed: [ 'destroy-k8s-<%= iaas %>-static-network' ]
    - get: gcs-kubo-release-pre
      passed: [ 'destroy-k8s-<%= iaas %>-static-network' ]
    - get: gcs-bosh-state
      passed: [ 'destroy-k8s-<%= iaas %>-static-network' ]
    - get: gcs-bosh-creds
      passed: [ 'destroy-k8s-<%= iaas %>-static-network' ]

  - task: unpack-kubo-deployment
    file: git-kubo-ci/tasks/unpack-kubo-deployment.yml
    tags: [gcp]

  - task: configure-bosh
    tags: [gcp]
    input_mapping:
      kubo-lock: kubo-lock-<%= iaas %>
    file: git-kubo-ci/tasks/configure-bosh.yml
    tags: [gcp]

  - task: deploy
    tags: [gcp]
    input_mapping:
      kubo-lock: kubo-lock-<%= iaas %>
      gcs-kubo-release-tarball: gcs-kubo-release-pre
    file: git-kubo-ci/tasks/deploy-k8s-instance.yml

- name: run-turbulence-tests-<%= iaas %>-dynamic-network
  plan:
  - aggregate:
    - get: git-kubo-ci
    - get: kubo-lock-<%= iaas %>
      version: every
      trigger: true
      passed: [ 'deploy-k8s-<%= iaas %>-dynamic-network' ]
    - get: gcs-bosh-state
      passed: [ 'deploy-k8s-<%= iaas %>-dynamic-network' ]
    - get: gcs-bosh-creds
      passed: [ 'deploy-k8s-<%= iaas %>-dynamic-network' ]
    - get: gcs-kubo-release-pre
      passed: [ 'deploy-k8s-<%= iaas %>-dynamic-network' ]
    - get: gcs-kubo-deployment-pre
      passed: [ 'deploy-k8s-<%= iaas %>-dynamic-network' ]

  - task: unpack-kubo-deployment
    file: git-kubo-ci/tasks/unpack-kubo-deployment.yml
    tags: [gcp]

  - task: turbulence-tests
    file: git-kubo-ci/tasks/run-k8s-turbulence-tests-ci.yml
    tags: [gcp]
    input_mapping: {kubo-lock: kubo-lock-<%= iaas %>}


- name: destroy-k8s-<%= iaas %>-dynamic-network
  plan:
  - aggregate:
    - get: git-kubo-ci
    - get: kubo-lock-<%= iaas %>
      version: every
      trigger: true
      passed: [ 'run-turbulence-tests-<%= iaas %>-dynamic-network' ]
    - get: gcs-kubo-deployment-pre
      passed: [ 'run-turbulence-tests-<%= iaas %>-dynamic-network' ]
    - get: gcs-kubo-release-pre
      passed: [ 'run-turbulence-tests-<%= iaas %>-dynamic-network' ]
    - get: gcs-bosh-state
      passed: [ 'run-turbulence-tests-<%= iaas %>-dynamic-network' ]
    - get: gcs-bosh-creds
      passed: [ 'run-turbulence-tests-<%= iaas %>-dynamic-network' ]

  - task: unpack-kubo-deployment
    file: git-kubo-ci/tasks/unpack-kubo-deployment.yml
    tags: [gcp]

  - task: destroy-k8s
    file: git-kubo-ci/tasks/destroy-k8s-instance.yml
    tags: [gcp]
    input_mapping: {kubo-lock: kubo-lock-<%= iaas %>}

- name: destroy-bosh-<%= iaas %>
  plan:
  - aggregate:
    - get: git-kubo-ci
    - get: kubo-lock-<%= iaas %>
      version: every
      trigger: true
      passed:
      - 'destroy-k8s-<%= iaas %>-dynamic-network'
    - get: gcs-kubo-deployment-pre
      passed:
      - 'destroy-k8s-<%= iaas %>-dynamic-network'
    - get: gcs-kubo-release-pre
      passed: [ 'destroy-k8s-<%= iaas %>-dynamic-network' ]
    - get: gcs-bosh-state
      passed: [ 'destroy-k8s-<%= iaas %>-dynamic-network' ]
    - get: gcs-bosh-creds
      passed:
      - 'destroy-k8s-<%= iaas %>-dynamic-network'

  - task: unpack-kubo-deployment
    tags: [gcp]
    file: git-kubo-ci/tasks/unpack-kubo-deployment.yml

  - task: destroy
    tags: [gcp]
    file: git-kubo-ci/tasks/destroy-bosh.yml
    input_mapping: {kubo-lock: kubo-lock-<%= iaas %>}

  - put: kubo-lock-<%= iaas %>
    params: { release: kubo-lock-<%= iaas %> }
<% end %>
