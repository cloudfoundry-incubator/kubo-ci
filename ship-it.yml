resource_types:
- name: gcs
  type: docker-image
  source:
    repository: frodenas/gcs-resource

- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

resources:
- name: release-candidate-signal
  type: gcs
  source:
    json_key: ((gcs-json-key))
    bucket: kubo-pipeline-store
    versioned_file: shipables/shipable_version

- name: git-kubo-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/kubo-ci
    branch: master
    private_key: ((git-ssh-key.private_key))

- name: git-kubo-deployment-develop
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/kubo-deployment.git
    branch: develop
    private_key: ((git-ssh-key.private_key))

- name: git-kubo-deployment-master
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/kubo-deployment.git
    branch: master
    private_key: ((git-ssh-key.private_key))

- name: git-kubo-release-develop
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/kubo-release.git
    branch: develop
    private_key: ((git-ssh-key.private_key))

- name: git-kubo-release-master
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/kubo-release.git
    branch: master
    private_key: ((git-ssh-key.private_key))

- name: git-kubo-release-windows-develop
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/kubo-release-windows.git
    branch: develop
    private_key: ((git-ssh-key.private_key))

- name: git-kubo-release-windows-master
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/kubo-release-windows.git
    branch: master
    private_key: ((git-ssh-key.private_key))

- name: kubo-version
  type: semver
  source:
    driver: gcs
    key: versions/kubo-version
    json_key: ((gcs-json-key))
    bucket: kubo-pipeline-store

- name: gh-release-kubo-release
  type: github-release
  source:
    owner: cloudfoundry-incubator
    repository: kubo-release
    access_token: ((github-token-key))
    drafts: true
    pre_release: true

- name: gh-release-kubo-deployment
  type: github-release
  source:
    owner: cloudfoundry-incubator
    repository: kubo-deployment
    access_token: ((github-token-key))
    drafts: true
    pre_release: true

- name: gh-release-kubo-release-windows
  type: github-release
  source:
    owner: cloudfoundry-incubator
    repository: kubo-release-windows
    access_token: ((github-token-key))
    drafts: true
    pre_release: true

- name: gcs-compilation-source-json
  type: gcs
  source:
    json_key: ((gcs-json-key))
    bucket: kubo-pipeline-store
    versioned_file: gcp-compilation-env/source.json

# precompiling
- name: compilation-deployment
  type: bosh-deployment
  source:
    deployment: compilation-default
    skip_check: true

- name: compilation-deployment-windows
  type: bosh-deployment
  source:
    deployment: compilation-windows
    skip_check: true

- name: gcs-precompiled-kubo-untested
  type: gcs
  source:
    json_key: ((gcs-json-key))
    bucket: kubo-precompiled-releases
    regexp: kubo-(\d+\.\d+\.\d+(-dev\.\d+)*)-ubuntu-xenial-.*\.tgz

- name: gcs-precompiled-kubo-windows-untested
  type: gcs
  source:
    json_key: ((gcs-json-key))
    bucket: kubo-precompiled-releases
    regexp: kubo-windows-(\d+\.\d+\.\d+(-dev\.\d+)*)-windows2019-.*\.tgz

jobs:
- name: ship-it
  plan:
  - in_parallel:
    - get: git-kubo-ci
    - get: gcs-compilation-source-json
    - get: kubo-version
      params:
        bump: final
    - get: git-kubo-release-master
    - get: git-kubo-release-windows-master
    - get: git-kubo-deployment-master
    - get: git-kubo-release-develop
    - get: git-kubo-release-windows-develop
    - get: git-kubo-deployment-develop
    - get: release-candidate-signal
  - task: checkout-to-commit
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: gcr.io/cf-pks-golf/pcfkubo/kubo-ci
          tag: stable
      outputs:
      - name: git-kubo-release-output
      - name: git-kubo-release-windows-output
      - name: git-kubo-deployment-output
      inputs:
      - name: git-kubo-ci
      - name: git-kubo-release-develop
      - name: git-kubo-release-windows-develop
      - name: git-kubo-deployment-develop
      - name: release-candidate-signal
      run:
        path: /bin/bash
        args:
        - -eux
        - -c
        - |
          release_sha="$(awk -F' ' '{print $1}' release-candidate-signal/shipable_version)"
          release_windows_sha="$(awk -F' ' '{print $2}' release-candidate-signal/shipable_version)"
          deployment_sha="$(awk -F' ' '{print $3}' release-candidate-signal/shipable_version)"
          shopt -s dotglob

          git --git-dir="git-kubo-release-develop/.git" checkout $release_sha
          cp -R git-kubo-release-develop/* git-kubo-release-output

          git --git-dir="git-kubo-release-windows-develop/.git" checkout $release_windows_sha
          cp -R git-kubo-release-windows-develop/* git-kubo-release-windows-output

          git --git-dir="git-kubo-deployment-develop/.git" checkout $deployment_sha
          cp -R git-kubo-deployment-develop/* git-kubo-deployment-output
  - put: git-kubo-release-master
    params:
      repository: git-kubo-release-output
      merge: true
  - put: git-kubo-release-windows-master
    params:
      repository: git-kubo-release-windows-output
      merge: true
  - put: git-kubo-deployment-master # merge to master
    params:
      repository: git-kubo-deployment-output
      merge: true
  - task: create-final-release
    file: git-kubo-ci/tasks/create-final-release.yml
    input_mapping:
      git-kubo-release: git-kubo-release-master
    params:
      GCS_JSON_KEY: ((gcs-json-key))
  - task: create-final-release-windows # TODO: Double check create final would work with windows
    file: git-kubo-ci/tasks/create-final-release.yml
    input_mapping:
      git-kubo-release: git-kubo-release-windows-master
    output_mapping:
      git-kubo-release-output: git-kubo-release-windows-output
      kubo-release-tarball: kubo-release-windows-tarball
      kubo-release-tarball-notes: kubo-release-windows-tarball-notes
    params:
      GCS_JSON_KEY: ((gcs-json-key))
      release_name: "kubo-release-windows"
  - task: generate-compilation-manifest # TODO: generate could go in parallel
    file: git-kubo-ci/tasks/generate-compilation-manifest.yml
    input_mapping:
      git-kubo-deployment: git-kubo-deployment-master
    params:
      RELEASE_LIST: kubo
  - task: generate-compilation-manifest-windows
    file: git-kubo-ci/tasks/generate-compilation-manifest.yml
    input_mapping:
      git-kubo-deployment: git-kubo-deployment-master
    output_mapping:
      compilation-manifest: compilation-manifest-windows
    params:
      RELEASE_LIST: kubo-windows
      stemcell_alias: windows
  - put: compilation-deployment
    params:
      manifest: compilation-manifest/manifest.yml
      source_file: gcs-compilation-source-json/source.json
      releases:
      - kubo-release-tarball/*.tgz
  - put: compilation-deployment-windows
    params:
      manifest: compilation-manifest-windows/manifest.yml
      source_file: gcs-compilation-source-json/source.json
      releases:
        - kubo-release-windows-tarball/*.tgz
  - task: export
    file: git-kubo-ci/tasks/export-release.yml
    input_mapping:
      git-kubo-deployment: git-kubo-deployment-master
      gcs-source-json: gcs-compilation-source-json
    params:
      RELEASE_LIST: kubo
  - task: export-windows
    file: git-kubo-ci/tasks/export-release.yml
    params:
      RELEASE_LIST: kubo-windows
      stemcell_alias: windows
    input_mapping:
      git-kubo-deployment: git-kubo-deployment-master
      gcs-source-json: gcs-compilation-source-json
      compilation-deployment: compilation-deployment-windows
    output_mapping:
      compiled-releases: compiled-releases-windows
  - put: gcs-precompiled-kubo-untested
    params:
      file: compiled-releases/kubo-*.tgz
  - put: gcs-precompiled-kubo-windows-untested
    params:
      file: compiled-releases-windows/kubo-*.tgz
  - task: bump-precompiled-releases-in-manifest
    file: git-kubo-ci/tasks/bump-precompiled-releases-in-manifest.yml
    input_mapping:
      git-kubo-deployment: git-kubo-deployment-master
    params:
      RELEASE_LIST: kubo

  - task: set-kubo-release-version-in-manifest
    file: git-kubo-ci/tasks/set-kubo-release-version-in-manifest.yml
    input_mapping:
      git-kubo-deployment: git-kubo-deployment-output
  - task: create-kubo-deployment-tarball
    file: git-kubo-ci/tasks/create-kubo-deployment-tarball.yml
    params:
      GCS_JSON_KEY: ((gcs-json-key))
  - in_parallel:
    - do:
      - put: git-kubo-release-master
        params:
          repository: git-kubo-release-output
      - put: gh-release-kubo-release
        params:
          body: kubo-release-tarball-notes/body
          globs:
          - "kubo-release-tarball/*.tgz"
          - compiled-releases/kubo-*.tgz
          name: kubo-release-tarball-notes/name
          tag: kubo-version/version
          tag_prefix: v
    - do:
        - put: git-kubo-release-windows-master
          params:
            repository: git-kubo-release-windows-output
        - put: gh-release-kubo-release-windows
          params:
            body: kubo-release-windows-tarball-notes/body
            globs:
              - "kubo-release-windows-tarball/*.tgz"
              - compiled-releases-windows/kubo-windows-*.tgz
            name: kubo-release-windows-tarball-notes/name
            tag: kubo-version/version
            tag_prefix: v
    - do:
      - put: git-kubo-deployment-master
        params:
          repository: git-kubo-deployment-output
          merge: true
      - put: gh-release-kubo-deployment
        params:
          body: kubo-deployment/body
          globs: [ "kubo-deployment/kubo-deployment-*.tgz" ]
          name: kubo-deployment/name
          tag: kubo-version/version
          tag_prefix: v
    - put: git-kubo-ci
      params:
        repository: git-kubo-ci
        only_tag: true
        tag: kubo-version/version
        tag_prefix: v
  - put: git-kubo-release-develop
    params:
      repository: git-kubo-release-master
      merge: true
  - put: git-kubo-release-windows-develop
    params:
      repository: git-kubo-release-windows-master
      merge: true
  - put: git-kubo-deployment-develop
    params:
      merge: true
      repository: git-kubo-deployment-master
  - put: kubo-version
    params:
      bump: minor
