<%
  tested_images=%w(test-runner vsphere-cleaner aws-maintenance kubo-ci nginx-bionic)
  untested_images=%w(ulimit git-bosh api-proxy conformance)
%>
---
resources:
<% (tested_images + untested_images).each do |image_name| %>
- name: git-kubo-ci-<%= image_name %>
  type: git
  source:
    uri: https://github.com/pivotal-cf-experimental/kubo-ci
    branch: master
    paths:
    - docker-images/<%= image_name %>

- name: <%= image_name %>-stable
  type: docker-image
  source:
    repository: gcr.io/cf-pks-golf/pcfkubo/<%= image_name %>
    username: _json_key
    password: ((gcs-json-key))
    tag: stable

  <% if tested_images.include? image_name %>
- name: <%= image_name %>-latest
  type: docker-image
  source:
    repository: gcr.io/cf-pks-golf/pcfkubo/<%= image_name %>
    username: _json_key
    password: ((gcs-json-key))
    tag: latest
  <% end %>
<% end %>

- name: gcs-vsphere-cleaner
  type: gcs
  source:
    json_key: ((gcs-json-key))
    bucket: kubo-public
    versioned_file: vsphere-cleaner

- name: nginx-bionic-version
  type: semver
  source:
    driver: gcs
    key: versions/nginx-bionic-version
    json_key: ((gcs-json-key))
    bucket: kubo-pipeline-store
    initial_version: 1.0.0

resource_types:
- name: gcs
  type: docker-image
  source:
    repository: frodenas/gcs-resource

jobs:
- name: build-kubo-ci
  plan:
  - get: git-kubo-ci-kubo-ci
    trigger: true
  - put: kubo-ci-latest
    params:
      build: git-kubo-ci-kubo-ci/docker-images/kubo-ci
      cache: true
  - task: test-docker-image
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: pcfkubo/kubo-ci
          tag: latest

      inputs:
      - name: git-kubo-ci-kubo-ci
      run:
        path: ginkgo
        args:
        - -r
        - git-kubo-ci-kubo-ci/docker-images/kubo-ci/system_tests/
  - put: kubo-ci-stable
    params:
      cache: true
      pull_repository: pcfkubo/kubo-ci
      pull_tag: latest

- name: build-vsphere-cleaner
  plan:
  - get: git-kubo-ci-vsphere-cleaner
    trigger: true
  - get: gcs-vsphere-cleaner
    trigger: true
  - put: vsphere-cleaner-latest
    params:
      build: git-kubo-ci-vsphere-cleaner/docker-images/vsphere-cleaner
  - task: test-docker-image
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: pcfkubo/vsphere-cleaner
          tag: latest
      inputs:
      - name: git-kubo-ci-vsphere-cleaner
      run:
        path: git-kubo-ci-vsphere-cleaner/docker-images/vsphere-cleaner/run_tests
  - put: vsphere-cleaner-stable
    params:
      cache: true
      pull_repository: pcfkubo/vsphere-cleaner
      pull_tag: latest

- name: build-ulimit
  plan:
  - get: git-kubo-ci-ulimit
    trigger: true
  - put: ulimit-stable
    params:
      build: git-kubo-ci-ulimit/docker-images/ulimit

- name: build-test-runner
  plan:
  - get: git-kubo-ci-test-runner
    trigger: true
  - put: test-runner-latest
    params:
      build: git-kubo-ci-test-runner/docker-images/test-runner
  - task: test-docker-image
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: pcfkubo/test-runner
          tag: latest
      inputs:
      - name: git-kubo-ci-test-runner
      run:
        path: ginkgo
        args:
        - -r
        - git-kubo-ci-test-runner/docker-images/test-runner/system_tests
  - put: test-runner-stable
    params:
      cache: true
      pull_repository: pcfkubo/test-runner
      pull_tag: latest

- name: build-git-bosh
  plan:
  - get: git-kubo-ci-git-bosh
    trigger: true
  - put: git-bosh-stable
    params:
      build: git-kubo-ci-git-bosh/docker-images/git-bosh

- name: build-aws-maintenance
  plan:
   - get: git-kubo-ci-aws-maintenance
     trigger: true
   - put: aws-maintenance-latest
     params:
       build: git-kubo-ci-aws-maintenance/docker-images/aws-maintenance
   - task: test-docker-image
     config:
       platform: linux
       image_resource:
         type: docker-image
         source:
           repository: pcfkubo/aws-maintenance
           tag: latest
       inputs:
       - name: git-kubo-ci-aws-maintenance
       run:
         path: git-kubo-ci-aws-maintenance/docker-images/aws-maintenance/run_tests
   - put: aws-maintenance-stable
     params:
       cache: true
       pull_repository: pcfkubo/aws-maintenance
       pull_tag: latest

- name: build-nginx-bionic
  plan:
   - get: git-kubo-ci-nginx-bionic
     trigger: true
   - get: nginx-bionic-version
     params:
       bump: final
   - put: nginx-bionic-latest
     params:
       build: git-kubo-ci-nginx-bionic/docker-images/nginx-bionic
   - task: test-docker-image
     config:
       platform: linux
       image_resource:
         type: docker-image
         source:
           repository: pcfkubo/nginx-bionic
           tag: latest
       inputs:
       - name: git-kubo-ci-nginx-bionic
       run:
        path: /bin/bash
        args:
        - -e
        - -cx
        - |
          nginx  -g "daemon off;" &
          sleep 1
          if curl localhost:80; then echo "Nginx working";  else echo "Nginx not working"; fi
          nginx -s stop
   - put: nginx-bionic-stable
     params:
       cache: true
       pull_repository: pcfkubo/nginx-bionic
       pull_tag: latest
       tag_file: nginx-bionic-version/version
   - put: nginx-bionic-version
     params:
       bump: major

- name: build-api-proxy
  plan:
  - get: git-kubo-ci-api-proxy
    trigger: true
  - put: api-proxy-stable
    params:
      build: git-kubo-ci-api-proxy/docker-images/api-proxy

- name: build-conformance
  plan:
  - get: git-kubo-ci-conformance
    trigger: true
  - put: conformance-stable
    params:
      build: git-kubo-ci-conformance/docker-images/conformance
