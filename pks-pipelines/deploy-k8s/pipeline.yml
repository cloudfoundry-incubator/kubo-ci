resources:
- name: kubo-lock
  type: pool
  source:
    uri: git@github.com:pivotal-cf-experimental/kubo-locks.git
    branch: master
    private_key: ((git-ssh-key.private_key))
    pool: gcp

- name: git-kubo-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/kubo-ci
    branch: feature/new-concourse
    private_key: ((git-ssh-key.private_key))

- name: git-pks-cfcr-etcd-release
  type: git
  source:
    uri: git@github.com:pivotal-cf/pks-cfcr-etcd-release.git
    branch: master
    private_key: ((git-ssh-key.private_key))

- name: git-pks-kubo-release
  type: git
  source:
    uri: git@github.com:pivotal-cf/pks-kubo-release.git
    branch: master
    private_key: ((git-ssh-key.private_key))

jobs:
- name: claim-lock
  max_in_flight: 1
  plan:
  - in_parallel:
    - get: git-kubo-ci
    - get: git-pks-cfcr-etcd-release
      trigger: true
    - get: git-pks-kubo-release
      trigger: true
    - get: kubo-lock
  - put: kubo-lock
    params:
      acquire: true

- name: upload-kubo-release
  plan:
  - in_parallel:
    - get: git-kubo-ci
    - get: kubo-lock
      trigger: true
      passed: [ 'claim-lock' ]
    - get: git-pks-kubo-release
      passed: [ 'claim-lock' ]
  - task: upload-kubo-release
    file: git-kubo-ci/pks-pipelines/deploy-k8s/upload-kubo-release/task.yml

- name: upload-etcd-release
  plan:
  - in_parallel:
    - get: git-kubo-ci
    - get: kubo-lock
      trigger: true
      passed: [ 'claim-lock' ]
    - get: git-pks-cfcr-etcd-release
      passed: [ 'claim-lock' ]
  - task: upload-kubo-release
    file: git-kubo-ci/pks-pipelines/deploy-k8s/upload-etcd-release/task.yml

- name: deploy-manifest
  plan:
  - in_parallel:
    - get: git-kubo-ci
    - get: kubo-lock
      trigger: true
      passed: [ 'upload-kubo-release', 'upload-etcd-release' ]
    - get: git-pks-cfcr-etcd-release
      passed: [ 'upload-etcd-release' ]
    - get: git-pks-kubo-release
      passed: [ 'upload-kubo-release' ]
  - task: deploy-release
    file: git-kubo-ci/pks-pipelines/deploy-k8s/deploy-manifest/task.yml
- name: destroy-k8s
  plan:
  - in_parallel:
    - get: git-kubo-ci
    - get: kubo-lock
      trigger: true
      passed: [ 'deploy-manifest' ]
    - get: git-pks-cfcr-etcd-release
      passed: [ 'deploy-manifest' ]
    - get: git-pks-kubo-release
      passed: [ 'deploy-manifest' ]
  - task: delete-release
    file: git-kubo-ci/pks-pipelines/deploy-k8s/delete-release/task.yml
  - put: kubo-lock
    params:
      release: kubo-lock
